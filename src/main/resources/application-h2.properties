#端口
server.port=9090
#方言
spring.jpa.database=h2
#显示sql日志
spring.jpa.show-sql=true
#ddl执行方式，update create 等
#文件数据库:jdbc:h2:file:{FilePath} 也可以简化为 jdbc:h2:{FilePath}
# ./{path}/{fileName} 在当前程序的根目录下创建目录和数据库文件
spring.datasource.url=jdbc:h2:~/data/luckysheet;AUTO_SERVER=TRUE
#ddl-auto=update:如果启动时表 格式不一致则更新表，原有数据保留
spring.jpa.hibernate.ddl-auto=update
#用户名、密码和驱动
spring.datasource.username=sa
spring.datasource.password=123456
spring.datasource.driverClassName=org.h2.Driver
#h2控制台，访问地址http://localhost:port/h2-console
spring.h2.console.path=/h2-console
spring.h2.console.enabled=true
## Mybatis 配置
mybatis-plus.mapper-locations=classpath*:/mapper/**/*.xml
mybatis-plus.type-aliases-package=com.scgxdz.*.entity
mapper.mappers=com.baomidou.mybatisplus.core.mapper.BaseMapper
#属性开启驼峰功能
mybatis.configuration.map-underscore-to-camel-case=true
#文件上传大小限制
spring.servlet.multipart.maxFileSize=1000MB
spring.servlet.multipart.maxRequestSize=1000MB

#日志
logging.config=classpath:logback-spring.xml
#离线文档生成的路径[项目的绝对路径]
autoCreateJapi = true
japiath=D:/20201118/app

datasource.driverName=dm.jdbc.driver.DmDriver
datasource.url=jdbc:dm://127.0.0.1:5236/HJJ_ZGXT_XS?characterEncoding=UTF-8&allowMultiQueries=true
datasource.username=HJJ_ZGXT_XS
datasource.password=admin1234
datasource.aes.key= AD42F6697B035B75

## 最小空闲连接数量
spring.datasource.hikari.minimum-idle = 5
## 空闲连接存活最大时间，默认600000（10分钟）
spring.datasource.hikari.idle-timeout= 180000
## 连接池最大连接数，默认是10
spring.datasource.hikari.maximum-pool-size= 10
## 数据库连接超时时间,默认30秒，即30000
spring.datasource.hikari.connection-timeout= 30000
spring.datasource.hikari.connection-test-query= SELECT 1
##此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
spring.datasource.hikari.max-lifetime= 1800000

#datax.job.accessToken=
#datax.job.i18n=
##触发池-阈值
#datax.job.triggerpool.fast.max=200
##触发池-低值
#datax.job.triggerpool.slow.max=100
#datax.job.logretentiondays=30

# mail
#spring.mail.host=smtp.qq.com
#spring.mail.port=25
#spring.mail.username=xxx@qq.com
#spring.mail.password=xxx
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true
#spring.mail.properties.mail.socketFactory.class=javax.net.ssl.SSLSocketFactory